name: CI

on:
  # Allows for devs to press a button to deploy
  workflow_dispatch:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:

#--------------------------------------------------------------------------------------
# Change the below portion to your own needs. This section is the Django/Python
# configuration of running a linter and testing framework. Adjust this section to how
# you've been running tests. Changes end at the next, huge dashed line

  python_setup:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

  # With no caching at all the entire ci process takes 4m 30s to complete!
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

# Changes should end here
#--------------------------------------------------------------------------------------
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: |
          github.event_name == 'push'
          && (github.ref == 'refs/heads/main' || github.head_ref == 'refs/heads/master')
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_CODEDEPLOY_REGION }}
# AWS CLI Docs: https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments-create-cli.html
      - name: Deploy to CodeDeploy
        # success() checks if the previous job was canceled or not
        if: ${{ success() }}
        env:
          DEPLOYMENT_GROUP: ${{ secrets.AWS_CODEDEPLOY_DEPLOYMENT_GROUP }}
          DEPLOY_APP_NAME: ${{ secrets.AWS_CODEDEPLOY_APPLICATION_NAME }}
        run: |
          aws deploy create-deployment \
          --deployment-group-name "$DEPLOYMENT_GROUP" \
          --description="$GITHUB_SHA" \
          --application-name "$DEPLOY_APP_NAME" \
          --github-location repository="$GITHUB_REPOSITORY",commitId="$GITHUB_SHA"
#--------------------------------------------------------------------------------------
